{"version":3,"sources":["SelectWithNumberInput.tsx","SelectComponent.tsx","SelectWithCheckBox.tsx","State.tsx","reducer.tsx","CountField.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SelectWithNumber","props","useState","value","setValue","refInput","React","createRef","refSelect","options","optionArray","map","item","name","className","Paper","elevation","style","padding","onChange","e","current","changeCount","type","actionType","count","currentTarget","ref","SelectComponent","SelectWithCheckbox","countChangeCallback","checked","isChecked","initialState","floors","floorsOptionArray","floorsCount","aprons","apronsOptionArray","apronsCount","tableTops","tableTopsOptionArray","tableTopsCount","cutOuts","cutOutsOptionArray","cutOutsCount","cookingPanels","cookingPanelsOptionArray","cookingPanelsCount","sinks","sinksOptionArray","sinksCount","mixerTap","mixerTapOptionArray","mixerTapCount","rangeHood","rangeHoodOptionArray","rangeHoodCount","four","fourOptionArray","fourCount","microwave","microwaveOptionArray","microwaveCount","dishwasher","dishwasherOptionArray","dishwasherCount","skirtingBoardTableTops","skirtingBoardTableTopsOptionArray","skirtingBoardTableTopsCount","washingMachine","washingMachineOptionArray","washingMachineCount","backLighting","backLightingOptionArray","backLightingCount","filter","filterOptionArray","filterCount","CHANGE_FLOOR","CHANGE_APRONS","CHANGE_TABLETOPS","CHANGE_COOKINGPANELS","CHANGE_CHECKED","CHANGE_SINKS","CHANGE_MIXERTAP","CHANGE_RANGEHOOD","CHANGE_FOUR","CHANGE_MICROWAVE","CHANGE_DISHWASHER","CHANGE_SKIRTINGBOARD","CHANGE_WASHINGMACHINE","CHANGE_BACKLIGHTING","CHANGE_FILTER","RESET_ALL","reducer","state","action","newObj","JSON","parse","stringify","resetObj","CountField","Button","variant","color","onClick","App","useReducer","dispatch","totalCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.321f009f.chunk.js","sourcesContent":["import Paper from '@material-ui/core/Paper';\r\nimport React, {ChangeEvent, FC, useReducer, useState} from 'react';\r\nimport './App.css';\r\nimport {ActionType, ArrOptionsType, InitialStateType} from \"./types\";\r\n\r\n\r\n\r\ntype SelectWithNumberType = {\r\n    optionArray: Array<ArrOptionsType>\r\n    changeCount: any\r\n    actionType: string\r\n    name: string\r\n}\r\n\r\nfunction SelectWithNumber(props: SelectWithNumberType) {\r\n\r\n    let [value, setValue] = useState<number>(0);\r\n    const refInput = React.createRef<HTMLInputElement>();\r\n    const refSelect = React.createRef<HTMLSelectElement>();\r\n\r\n    const options: Array<any> = props.optionArray.map((item) => {\r\n        return <option value={item.value}>{item.name}</option>\r\n    })\r\n\r\n    const onChangeMeters = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(+e.currentTarget.value)\r\n        if (refSelect.current) {\r\n            props.changeCount({type: props.actionType, count: +refSelect.current.value * +e.currentTarget.value})\r\n        }\r\n    }\r\n\r\n    const onFuncCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        if (refInput.current) {\r\n            props.changeCount({type: props.actionType, count: +e.currentTarget.value * +refInput.current.value})\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'selectWithNumber'}>\r\n            <Paper elevation={10} style={{padding: \"15px\"}}>\r\n                <div>\r\n                    <h3>{props.name}:</h3>\r\n                </div>\r\n                <div>\r\n                    <select onChange={onFuncCallback} ref={refSelect}>\r\n                        {options}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <h3>Количество погонных метров:</h3>\r\n                </div>\r\n                <div>\r\n                    <input className={'metersInput'} type={'number'} onChange={onChangeMeters} value={value}\r\n                           ref={refInput}/>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectWithNumber","import React, {ChangeEvent, FC, useReducer, useState} from 'react';\r\nimport './App.css';\r\nimport {ArrOptionsType} from \"./types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\ntype SelectComponentType = {\r\n    optionArray: Array<ArrOptionsType>\r\n    changeCount: any\r\n    actionType: string\r\n    name: string\r\n}\r\n\r\nfunction SelectComponent(props: SelectComponentType) {\r\n\r\n    const options: Array<any> = props.optionArray.map((item) => {\r\n        return <option value={item.value}>{item.name}</option>\r\n    })\r\n\r\n\r\n    const onFuncCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        props.changeCount({type: props.actionType, count: +e.currentTarget.value})\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={'selectComponent'}>\r\n            <Paper elevation={10} style={{padding: \"15px\"}}>\r\n                <div>\r\n                    <h3>{props.name}:</h3>\r\n                </div>\r\n                <div>\r\n                    <select onChange={onFuncCallback}>\r\n                        {options}\r\n                    </select>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectComponent","import React, {ChangeEvent} from 'react';\r\nimport './App.css';\r\nimport {ArrOptionsType} from \"./types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\ntype SelectWithCheckBoxType = {\r\n    optionArray: Array<ArrOptionsType>\r\n    changeCount: any\r\n    actionType: string\r\n    name: string\r\n}\r\n\r\nfunction SelectWithCheckbox(props: SelectWithCheckBoxType) {\r\n\r\n    const countChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.name === 'под мойку') {\r\n            props.changeCount({type: props.actionType, count: e.currentTarget.value, name: 'под мойку'})\r\n        } else if (e.currentTarget.name === 'под варочную поверхность') {\r\n            props.changeCount({type: props.actionType, count: e.currentTarget.value, name: 'под варочную поверхность'})\r\n        }\r\n    }\r\n\r\n    const options: Array<any> = props.optionArray.map(item => {\r\n        return <div>\r\n            <label>{item.name}:</label>\r\n            <input value={item.value} type={'checkbox'} checked={item.isChecked} onChange={countChangeCallback}\r\n                   name={item.name}/>\r\n        </div>\r\n\r\n    })\r\n\r\n    return (\r\n        <div className={'selectWithCheckbox'}>\r\n            <Paper elevation={10} style={{padding: \"15px\"}}>\r\n                <h3>{props.name}:</h3>\r\n                {options}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectWithCheckbox","import {ArrOptionsType, InitialStateType} from \"./types\";\r\n\r\nexport let initialState: InitialStateType = {\r\n    floors: {\r\n        floorsOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: '2 яруса', value: 2100},\r\n            {name: '3 яруса', value: 2800}],\r\n        floorsCount: 0,\r\n        name: 'Вырез отверстия'\r\n    },\r\n    aprons: {\r\n        apronsOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Панель ПВХ ', value: 650},\r\n            {name: 'Мазайка ', value: 4800},\r\n            {name: 'Плитка ', value: 3800}],\r\n        apronsCount: 0,\r\n        name: 'Монтаж фартука'\r\n    },\r\n    tableTops: {\r\n        tableTopsOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'ДСП', value: 500},\r\n            {name: 'Каменная', value: 1800}],\r\n        tableTopsCount: 0,\r\n        name: 'Монтаж столешницы'\r\n    },\r\n    cutOuts: {\r\n        cutOutsOptionArray: [\r\n            {name: 'под мойку', value: 500, isChecked: false},\r\n            {name: 'под варочную поверхность', value: 500, isChecked: false}\r\n        ],\r\n        cutOutsCount: 0,\r\n        name: 'Вырез отверстия'\r\n    },\r\n    cookingPanels: {\r\n        cookingPanelsOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 1100},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        cookingPanelsCount: 0,\r\n        name: 'Монтаж варочной панели'\r\n    },\r\n    sinks: {\r\n        sinksOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 1500},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        sinksCount: 0,\r\n        name: 'Монтаж раковины с герметизацией и подключением сифона'\r\n    },\r\n    mixerTap: {\r\n        mixerTapOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 1200},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        mixerTapCount: 0,\r\n        name: 'Монтаж смесителя с подключением'\r\n    },\r\n    rangeHood: {\r\n        rangeHoodOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 1600},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        rangeHoodCount: 0,\r\n        name: 'Монтаж вытяжки'\r\n    },\r\n    four: {\r\n        fourOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 1400},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        fourCount: 0,\r\n        name: 'Монтаж духового шкафа'\r\n    },\r\n    microwave: {\r\n        microwaveOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 900},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        microwaveCount: 0,\r\n        name: 'Монтаж микроволновки'\r\n    },\r\n    dishwasher: {\r\n        dishwasherOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 1600},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        dishwasherCount: 0,\r\n        name: 'Монтаж посудамоечной машины'\r\n    },\r\n    skirtingBoardTableTops: {\r\n        skirtingBoardTableTopsOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 350},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        skirtingBoardTableTopsCount: 0,\r\n        name: 'Монтаж плинтуса на столещницу'\r\n    },\r\n    washingMachine: {\r\n        washingMachineOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 1600},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        washingMachineCount: 0,\r\n        name: 'Монтаж стиральной машины'\r\n    },\r\n    backLighting: {\r\n        backLightingOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 1500},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        backLightingCount: 0,\r\n        name: 'Монтаж подсветки на гарнитуре'\r\n    },\r\n    filter: {\r\n        filterOptionArray: [\r\n            {name: 'Не выбрано', value: 0},\r\n            {name: 'Нужна', value: 1500},\r\n            {name: 'Не нужна', value: 0}\r\n        ],\r\n        filterCount: 0,\r\n        name: 'Монтаж фильтра под мойку'\r\n    }\r\n};","import {ActionType, InitialStateType} from \"./types\";\r\nimport {initialState} from \"./State\";\r\n\r\nexport const CHANGE_FLOOR = 'CHANGE_FLOOR';\r\nexport const CHANGE_APRONS = 'CHANGE_APRONS';\r\nexport const CHANGE_TABLETOPS = 'CHANGE_TABLETOPS';\r\nexport const CHANGE_COOKINGPANELS = 'CHANGE_COOKINGPANELS';\r\nexport const CHANGE_CHECKED = 'CHANGE_CHECKED';\r\nexport const CHANGE_SINKS = 'CHANGE_SINKS';\r\nexport const CHANGE_MIXERTAP = 'CHANGE_MIXERTAP';\r\nexport const CHANGE_RANGEHOOD = 'CHANGE_RANGEHOOD';\r\nexport const CHANGE_FOUR = 'CHANGE_FOUR';\r\nexport const CHANGE_MICROWAVE = 'CHANGE_MICROWAVE';\r\nexport const CHANGE_DISHWASHER = 'CHANGE_DISHWASHER';\r\nexport const CHANGE_SKIRTINGBOARD = 'CHANGE_SKIRTINGBOARD';\r\nexport const CHANGE_WASHINGMACHINE = 'CHANGE_WASHINGMACHINE';\r\nexport const CHANGE_BACKLIGHTING = 'CHANGE_BACKLIGHTING';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\r\nexport const RESET_ALL = 'RESET_ALL';\r\n\r\nexport const reducer = (state: InitialStateType, action: ActionType) => {\r\n    let newObj: InitialStateType = JSON.parse(JSON.stringify(state));\r\n    let resetObj: InitialStateType = JSON.parse(JSON.stringify(initialState));\r\n    switch (action.type) {\r\n        case CHANGE_FLOOR:\r\n            newObj.floors.floorsCount = newObj.floors.floorsCount + (+action.count - newObj.floors.floorsCount)\r\n            return newObj;\r\n        case CHANGE_APRONS:\r\n            newObj.aprons.apronsCount = newObj.aprons.apronsCount + (+action.count - newObj.aprons.apronsCount)\r\n            return newObj;\r\n        case CHANGE_TABLETOPS:\r\n            newObj.tableTops.tableTopsCount = newObj.tableTops.tableTopsCount + (+action.count - newObj.tableTops.tableTopsCount)\r\n            return newObj;\r\n        case CHANGE_COOKINGPANELS:\r\n            newObj.cookingPanels.cookingPanelsCount = newObj.cookingPanels.cookingPanelsCount + (+action.count - newObj.cookingPanels.cookingPanelsCount);\r\n            return newObj;\r\n        case CHANGE_CHECKED:\r\n            if (action.name === 'под мойку') {\r\n                if (newObj.cutOuts.cutOutsOptionArray[0].isChecked) {\r\n                    newObj.cutOuts.cutOutsCount = newObj.cutOuts.cutOutsCount - +action.count\r\n                } else {\r\n                    newObj.cutOuts.cutOutsCount = newObj.cutOuts.cutOutsCount + +action.count\r\n                }\r\n                newObj.cutOuts.cutOutsOptionArray[0].isChecked = !newObj.cutOuts.cutOutsOptionArray[0].isChecked;\r\n                return newObj\r\n            } else if (action.name === 'под варочную поверхность') {\r\n                if (newObj.cutOuts.cutOutsOptionArray[1].isChecked) {\r\n                    newObj.cutOuts.cutOutsCount = newObj.cutOuts.cutOutsCount - +action.count\r\n                } else {\r\n                    newObj.cutOuts.cutOutsCount = newObj.cutOuts.cutOutsCount + +action.count\r\n                }\r\n                newObj.cutOuts.cutOutsOptionArray[1].isChecked = !newObj.cutOuts.cutOutsOptionArray[1].isChecked;\r\n                return newObj\r\n            } else {\r\n                return newObj\r\n            }\r\n        case CHANGE_SINKS:\r\n            newObj.sinks.sinksCount = newObj.sinks.sinksCount + (+action.count - newObj.sinks.sinksCount);\r\n            return newObj;\r\n        case CHANGE_MIXERTAP:\r\n            newObj.mixerTap.mixerTapCount = newObj.mixerTap.mixerTapCount + (+action.count - newObj.mixerTap.mixerTapCount);\r\n            return newObj;\r\n        case CHANGE_RANGEHOOD:\r\n            newObj.rangeHood.rangeHoodCount = newObj.rangeHood.rangeHoodCount + (+action.count - newObj.rangeHood.rangeHoodCount);\r\n            return newObj;\r\n        case CHANGE_FOUR:\r\n            newObj.four.fourCount = newObj.four.fourCount + (+action.count - newObj.four.fourCount);\r\n            return newObj;\r\n        case CHANGE_MICROWAVE:\r\n            newObj.microwave.microwaveCount = newObj.microwave.microwaveCount + (+action.count - newObj.microwave.microwaveCount);\r\n            return newObj;\r\n        case CHANGE_DISHWASHER:\r\n            newObj.dishwasher.dishwasherCount =  newObj.dishwasher.dishwasherCount + (+action.count -  newObj.dishwasher.dishwasherCount);\r\n            return newObj;\r\n        case CHANGE_SKIRTINGBOARD:\r\n            newObj.skirtingBoardTableTops.skirtingBoardTableTopsCount = newObj.skirtingBoardTableTops.skirtingBoardTableTopsCount +\r\n                (+action.count - newObj.skirtingBoardTableTops.skirtingBoardTableTopsCount);\r\n            return newObj;\r\n        case CHANGE_WASHINGMACHINE:\r\n            newObj.washingMachine.washingMachineCount = newObj.washingMachine.washingMachineCount +\r\n                (+action.count - newObj.washingMachine.washingMachineCount);\r\n            return newObj;\r\n        case CHANGE_BACKLIGHTING:\r\n            newObj.backLighting.backLightingCount = newObj.backLighting.backLightingCount +\r\n                (+action.count - newObj.backLighting.backLightingCount);\r\n            return newObj;\r\n        case CHANGE_FILTER:\r\n            newObj.filter.filterCount = newObj.filter.filterCount +\r\n                (+action.count - newObj.filter.filterCount);\r\n            return newObj;\r\n        case RESET_ALL:\r\n            return resetObj;\r\n        default:\r\n            return {...state}\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\ntype CountFieldType = {\r\n    count: number\r\n    changeCount: any\r\n    actionType: string\r\n}\r\n\r\nfunction CountField(props: CountFieldType) {\r\n\r\n    const resetAll = () => {\r\n        props.changeCount({type: props.actionType})\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <Paper elevation={10} style={{padding: \"30px\"}}>\r\n                <div className={'countFiled'}>\r\n                   <h1>\r\n                       {props.count}\r\n                   </h1>\r\n                </div>\r\n            </Paper>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={resetAll}>\r\n                    RESET\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountField","import React, {useReducer} from 'react';\nimport './App.css';\nimport SelectWithNumber from \"./SelectWithNumberInput\";\nimport SelectComponent from \"./SelectComponent\";\nimport SelectWithCheckbox from \"./SelectWithCheckBox\";\nimport {initialState} from \"./State\";\nimport {\n    CHANGE_APRONS,\n    CHANGE_BACKLIGHTING,\n    CHANGE_CHECKED, CHANGE_COOKINGPANELS, CHANGE_DISHWASHER, CHANGE_FILTER, CHANGE_FLOOR, CHANGE_FOUR,\n    CHANGE_MICROWAVE,\n    CHANGE_MIXERTAP,\n    CHANGE_RANGEHOOD,\n    CHANGE_SINKS, CHANGE_SKIRTINGBOARD, CHANGE_TABLETOPS, CHANGE_WASHINGMACHINE, reducer, RESET_ALL\n} from './reducer';\nimport CountField from \"./CountField\";\n\nfunction App() {\n\n    let [state, dispatch] = useReducer(reducer, initialState);\n\n    let totalCount = state.floors.floorsCount +\n        state.aprons.apronsCount +\n        state.tableTops.tableTopsCount +\n        state.cookingPanels.cookingPanelsCount +\n        state.cutOuts.cutOutsCount +\n        state.mixerTap.mixerTapCount +\n        state.rangeHood.rangeHoodCount +\n        state.four.fourCount +\n        state.microwave.microwaveCount +\n        state.dishwasher.dishwasherCount +\n        state.skirtingBoardTableTops.skirtingBoardTableTopsCount +\n        state.washingMachine.washingMachineCount +\n        state.backLighting.backLightingCount +\n        state.filter.filterCount +\n        state.sinks.sinksCount;\n\n    return (\n        <div className=\"App\">\n\n            <div>\n                <SelectWithNumber optionArray={state.floors.floorsOptionArray}\n                                  changeCount={dispatch}\n                                  name={state.floors.name} actionType={CHANGE_FLOOR}/>\n                <SelectWithNumber optionArray={state.aprons.apronsOptionArray}\n                                  changeCount={dispatch} name={state.aprons.name}\n                                  actionType={CHANGE_APRONS}/>\n                <SelectWithNumber optionArray={state.tableTops.tableTopsOptionArray}\n                                  changeCount={dispatch} name={state.tableTops.name}\n                                  actionType={CHANGE_TABLETOPS}/>\n                <SelectWithCheckbox optionArray={state.cutOuts.cutOutsOptionArray} changeCount={dispatch}\n                                    actionType={CHANGE_CHECKED}\n                                    name={state.cutOuts.name}/>\n                <SelectComponent optionArray={state.cookingPanels.cookingPanelsOptionArray}\n                                 changeCount={dispatch} name={state.cookingPanels.name}\n                                 actionType={CHANGE_COOKINGPANELS}/>\n                <SelectComponent optionArray={state.sinks.sinksOptionArray} name={state.sinks.name}\n                                 changeCount={dispatch}\n                                 actionType={CHANGE_SINKS}/>\n                <SelectComponent optionArray={state.mixerTap.mixerTapOptionArray} name={state.mixerTap.name}\n                                 changeCount={dispatch}\n                                 actionType={CHANGE_MIXERTAP}/>\n            </div>\n            <div>\n                <SelectComponent optionArray={state.rangeHood.rangeHoodOptionArray} name={state.rangeHood.name}\n                                 changeCount={dispatch}\n                                 actionType={CHANGE_RANGEHOOD}/>\n                <SelectComponent optionArray={state.four.fourOptionArray} changeCount={dispatch} actionType={CHANGE_FOUR}\n                                 name={state.four.name}/>\n                <SelectComponent optionArray={state.microwave.microwaveOptionArray} changeCount={dispatch}\n                                 actionType={CHANGE_MICROWAVE} name={state.microwave.name}/>\n                <SelectComponent optionArray={state.dishwasher.dishwasherOptionArray} changeCount={dispatch}\n                                 actionType={CHANGE_DISHWASHER} name={state.dishwasher.name}/>\n                <SelectWithNumber optionArray={state.skirtingBoardTableTops.skirtingBoardTableTopsOptionArray}\n                                  changeCount={dispatch} actionType={CHANGE_SKIRTINGBOARD}\n                                  name={state.skirtingBoardTableTops.name}/>\n                <SelectComponent optionArray={state.washingMachine.washingMachineOptionArray} changeCount={dispatch}\n                                 actionType={CHANGE_WASHINGMACHINE} name={state.washingMachine.name}/>\n                <SelectComponent optionArray={state.backLighting.backLightingOptionArray} changeCount={dispatch}\n                                 actionType={CHANGE_BACKLIGHTING} name={state.backLighting.name}/>\n                <SelectComponent optionArray={state.filter.filterOptionArray} changeCount={dispatch}\n                                 actionType={CHANGE_FILTER} name={state.filter.name}/>\n            </div>\n\n\n          <div>\n              <CountField count={totalCount} changeCount={dispatch} actionType={RESET_ALL}/>\n          </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}